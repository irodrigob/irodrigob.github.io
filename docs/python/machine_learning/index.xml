<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine learning on Navi-developer</title>
    <link>https://irodrigob.github.io/docs/python/machine_learning/</link>
    <description>Recent content in Machine learning on Navi-developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    
	<atom:link href="https://irodrigob.github.io/docs/python/machine_learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Librerias y paquetes</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/librerias/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/librerias/</guid>
      <description>Introducción#Librerias y pawuetes para poder usar el Machine Learning.
Los pasos para instalar las librerías esta explicado en la página de Anaconda.
Numpy#¿Qué és?#Según la Wikipedia: NumPy es una extensión de Python, que le agrega mayor soporte para vectores y matrices, constituyendo una biblioteca de funciones matemáticas de alto nivel para operar con esos vectores o matrices.
Instalación#No se instala porque viene incluido con Anaconda:</description>
    </item>
    
    <item>
      <title>Anaconda</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/anaconda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/anaconda/</guid>
      <description>Introducción#Tal como se ha explicado en la página de entorno de desarrollo, Anaconda permite la instalación de paquetes para usar el machine learning en Python.
Entornos#Los entornos, creo que hasta tres entornos se pueden usar, permiten tener instalaciones separadas de paquetes según lo que se quiera hacer.
Para hacer pruebas me he creado un ambiente llamado test que lo he creado con el Anaconda navigator yendo a la pestaña de Enviroments:</description>
    </item>
    
    <item>
      <title>Guardar modelos entrenados</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/guardar_modelos_entrenados/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/guardar_modelos_entrenados/</guid>
      <description>Introducción#Ejemplo extraído del video Machine Learning episodio 9. Cómo guardar un modelo entrenado.
El ejemplo esta creado el Jupiter Notebool y se irá poniendo el código de las distintas celdas.
En esta página veremos como se guardan los modelos entrenados para no tener que hacer entrenamientos cada vez que queremos hacer algo. En los ejemplos entrenar algoritmos se hace en segundos, pero en casos reales este entrenamiento puede durar dias o semnanas.</description>
    </item>
    
  </channel>
</rss>