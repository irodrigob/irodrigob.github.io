<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tensor Flow on Navi-developer</title>
    <link>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/</link>
    <description>Recent content in Tensor Flow on Navi-developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    
	<atom:link href="https://irodrigob.github.io/docs/python/machine_learning/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ejemplo clasificador de imagenes</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/clasificador_imagenes_ejemplo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/clasificador_imagenes_ejemplo/</guid>
      <description>Introducción#Ejemplo extraído de los videos (pt. 1/2) Cómo hacer un clasificador de imagenes desde cero con Tensorflow y (pt. 2/2) Cómo hacer un clasificador de imagenes desde cero con Tensorflow
Y el modelo de datos de entrenamiento se puede en el repositorio del ejemplo de Alex Puig
El ejemplo consta de dos archivos: el primero sirve para entrenar el algoritmo y el segundo para la predicción. Ambos ejemplos son ejemplo en código fuente de Python</description>
    </item>
    
    <item>
      <title>Ejemplo transfer learning</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/ejemplo_transfer_learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/ejemplo_transfer_learning/</guid>
      <description>Introducción#Ejemplo extraído del video Importar modelo para clasificar imágenes.
Y el modelo de datos de entrenamiento se puede descargar en el repositorio del ejemplo de Alex Puig.
El transfer learning o transferencia de aprendizaje es una técnica en la cual incorporamos un modelo ya pre-entrenado para utilizarlo para que clasifique lo que nosotros queramos.
Estos modelos son más complejos a nivel de configuración de redes convolucionales como el número de datos usados para entrenarlos.</description>
    </item>
    
    <item>
      <title>Reconocimiento números escritos a mano</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/reconocimiento_numeros_escrito_mano/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/reconocimiento_numeros_escrito_mano/</guid>
      <description>Introducción#Ejemplo extraído del video Tensorflow: Cómo clasificar números escritos a mano.
El ejemplo esta creado el Jupiter Notebool y se irá poniendo el código de las distintas celdas.
NOTA: El código del video esta basado en Tensor Flow 1.0. Pero el Tensor Flow que se ha instalado es la version 2.x, la llamaremos TF2.0 o TF20 . Por lo tanto hay muchas cosas que no son compatibles. En el código habrá partes las principales que se indique que no se usa en TF20, pero el resto de partes se pondrá en código TF20 para no poner demasiada basura en el código</description>
    </item>
    
    <item>
      <title>Usar dataset</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/usar_datasets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/usar_datasets/</guid>
      <description>Introducción#Este articulo lo he tenido que hacer para aprender la base de como funciona los dataset en Tensor Flow, porque si no hay manera de entender los ejemplos más complejos. O ejemplos creados en versión 1.x de Tensor Flow que al usarlos en la versión 2.0 hay que migrarlos.
Libreías de cada ejemplo#Las librérías que uso en cada ejemplo son las sigueintes:
# Libreria tensor flowe import tensorflow as tf # Daset de datos con números escritos a manorom from tensorflow.</description>
    </item>
    
    <item>
      <title>Variables y sesiones</title>
      <link>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/variables_sesiones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/machine_learning/tensorflow/variables_sesiones/</guid>
      <description>Introducción#Ejemplo extraído del video TensorFlow: Variables y Sesiones.
El ejemplo esta creado el Jupiter Notebool y se irá poniendo el código de las distintas celdas.
NOTA: El código del video esta basado en Tensor Flow 1.0. Pero el Tensor Flow que se ha instalado es la version 2.x, la llamaremos TF2.0 o TF20 . Por lo tanto hay muchas cosas que no son compatibles. En el código habrá partes las principales que se indique que no se usa en TF20, pero el resto de partes se pondrá en código TF20 para no poner demasiada basura en el código</description>
    </item>
    
  </channel>
</rss>