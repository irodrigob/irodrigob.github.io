<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sentencias on Navi-developer</title>
    <link>https://irodrigob.github.io/docs/python/sentencias/</link>
    <description>Recent content in Sentencias on Navi-developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    
	<atom:link href="https://irodrigob.github.io/docs/python/sentencias/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Entrada de datos</title>
      <link>https://irodrigob.github.io/docs/python/sentencias/entrada_datos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/sentencias/entrada_datos/</guid>
      <description>Entrada de datos#Para pedir datos existe la sentencia *input&amp;rdquo;, esta sentencia en el VSCODE abre una ventana, como la de los comandos, donde te pide los datos.
Ejemplo:
nombre = input(&amp;#34;¿dime tu nombre?&amp;#34;) print(nombre) Resultado:
ivan</description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://irodrigob.github.io/docs/python/sentencias/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/sentencias/variables/</guid>
      <description>Variables#Existen tres tipos de variables, al menos por lo que he visto que son: string, enteras y flotantes.
# Esta es integer a=23 # Esta es float b=23.456 # Esta es string c=&amp;#34;hola mundo&amp;#34; Para saber el tipo de variable en cualquier momento se puede usar la siguiente sentencia:
type(c) Convertir variables#Si queremos convertir el formato de una variable a otra. Como hay tres tipos de &amp;ldquo;tipos&amp;rdquo;, hay tres funciones que lo hace: INT, FLOAT, STR</description>
    </item>
    
    <item>
      <title>Captura de excepciones</title>
      <link>https://irodrigob.github.io/docs/python/sentencias/captura_excepciones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/sentencias/captura_excepciones/</guid>
      <description>Captura excepciones#Para captura excepciones y que no salgan error raros al hacer operaciones tenemos la sentencia TRY..EXCEPT
En el siguiente ejemplo extráido de un manual hay una formula para pasar de grados Farenheit a Celsius:
ent = input(&amp;#39;Introduzca la Temperatura Fahrenheit:&amp;#39;) try: fahr = float(ent) cel = (fahr - 32.0) * 5.0 / 9.0 print(&amp;#34;Grados celsius&amp;#34;:cel) except: print(&amp;#39;Por favor, introduzca un número&amp;#39;) NOTA: Aquí también tiene que haber una identación en el código dentro del TRY y del EXCEPT</description>
    </item>
    
    <item>
      <title>Condiciones</title>
      <link>https://irodrigob.github.io/docs/python/sentencias/condiciones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/sentencias/condiciones/</guid>
      <description>Condiciones#Las condiciones son como en la mayoria de lenguajes
 x == y &amp;ndash;&amp;gt; x es igual a y x != y &amp;ndash;&amp;gt; x es distinto de y x &amp;gt; y &amp;ndash;&amp;gt; x es mayor que y x &amp;lt; y &amp;ndash;&amp;gt; x es menor que y x &amp;gt;= y &amp;ndash;&amp;gt; x es mayor o igual que y x &amp;lt;= y &amp;ndash;&amp;gt; x es menor o igual que y x is y &amp;ndash;&amp;gt; x es lo mismo que y x is not y &amp;ndash;&amp;gt; x no es lo mismo que y Operadores lógicos son: and(y), or(o) y not(no)  Para hacer bucles condiciones esta la sentencia IF.</description>
    </item>
    
    <item>
      <title>Funciones internas</title>
      <link>https://irodrigob.github.io/docs/python/sentencias/funciones_internas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/sentencias/funciones_internas/</guid>
      <description>Funciones internas#Aquí una lista de funciones internas
 MAX y MIN &amp;ndash;&amp;gt; Devuelve el valor máximo y mínimo de una lista. Si es un string nos devolvería la letra más alta y la mínima. Ejemplo:  print(&amp;#34;Letra máxima: &amp;#34;,max(&amp;#34;hola mundo&amp;#34;)) print(&amp;#34;Letra mínima: &amp;#34;,min(&amp;#34;hola mundo&amp;#34;)) Resultado:
Letra máxima: uLetra mínima:  LEN &amp;ndash;&amp;gt; Devuelve el numéro de elementos de una lista. Si es un string devuelve el número de caracteres.</description>
    </item>
    
    <item>
      <title>Iteracciones</title>
      <link>https://irodrigob.github.io/docs/python/sentencias/iteracciones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/sentencias/iteracciones/</guid>
      <description>Iteracciones#</description>
    </item>
    
    <item>
      <title>Operadores</title>
      <link>https://irodrigob.github.io/docs/python/sentencias/operadores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://irodrigob.github.io/docs/python/sentencias/operadores/</guid>
      <description>Operadores#Aritméticos#Los operadores son los habituales:
 Sumar: + Resta: - División: / Multiplicación: * Elevar a la potencia: ** Obtener el resto: %  Ejemplos:
d = a * b print(&amp;#34;Resultado&amp;#34;, d) d = ( a + b ) / a print(&amp;#34;Resultado:&amp;#34;, d) Resultado:
Resultado 416.15999999999997Resultado: 3.89String#Con los string podemos contaner y incluso hacer que un caracter aparezca n veces.</description>
    </item>
    
  </channel>
</rss>